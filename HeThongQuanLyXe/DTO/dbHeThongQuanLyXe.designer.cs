#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HeThongQuanLyXe.DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HeThongQuanLyXe")]
	public partial class dbHeThongQuanLyXeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBAIXE(BAIXE instance);
    partial void UpdateBAIXE(BAIXE instance);
    partial void DeleteBAIXE(BAIXE instance);
    partial void InsertXE(XE instance);
    partial void UpdateXE(XE instance);
    partial void DeleteXE(XE instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    partial void InsertDICHVU(DICHVU instance);
    partial void UpdateDICHVU(DICHVU instance);
    partial void DeleteDICHVU(DICHVU instance);
    partial void InsertHOPDONG(HOPDONG instance);
    partial void UpdateHOPDONG(HOPDONG instance);
    partial void DeleteHOPDONG(HOPDONG instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertLOAIXE(LOAIXE instance);
    partial void UpdateLOAIXE(LOAIXE instance);
    partial void DeleteLOAIXE(LOAIXE instance);
    partial void InsertOPTION_DICHVU(OPTION_DICHVU instance);
    partial void UpdateOPTION_DICHVU(OPTION_DICHVU instance);
    partial void DeleteOPTION_DICHVU(OPTION_DICHVU instance);
    partial void InsertBANGGIADICHVU(BANGGIADICHVU instance);
    partial void UpdateBANGGIADICHVU(BANGGIADICHVU instance);
    partial void DeleteBANGGIADICHVU(BANGGIADICHVU instance);
    #endregion
		
		public dbHeThongQuanLyXeDataContext() : 
				base(global::HeThongQuanLyXe.Properties.Settings.Default.HeThongQuanLyXeConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbHeThongQuanLyXeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbHeThongQuanLyXeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbHeThongQuanLyXeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbHeThongQuanLyXeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BAIXE> BAIXEs
		{
			get
			{
				return this.GetTable<BAIXE>();
			}
		}
		
		public System.Data.Linq.Table<XE> XEs
		{
			get
			{
				return this.GetTable<XE>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
		
		public System.Data.Linq.Table<DICHVU> DICHVUs
		{
			get
			{
				return this.GetTable<DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<HOPDONG> HOPDONGs
		{
			get
			{
				return this.GetTable<HOPDONG>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<LOAIXE> LOAIXEs
		{
			get
			{
				return this.GetTable<LOAIXE>();
			}
		}
		
		public System.Data.Linq.Table<OPTION_DICHVU> OPTION_DICHVUs
		{
			get
			{
				return this.GetTable<OPTION_DICHVU>();
			}
		}
		
		public System.Data.Linq.Table<BANGGIADICHVU> BANGGIADICHVUs
		{
			get
			{
				return this.GetTable<BANGGIADICHVU>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BAIXE")]
	public partial class BAIXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _LoaiXe;
		
		private int _ChoTrong;
		
		private EntityRef<LOAIXE> _LOAIXE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLoaiXeChanging(int value);
    partial void OnLoaiXeChanged();
    partial void OnChoTrongChanging(int value);
    partial void OnChoTrongChanged();
    #endregion
		
		public BAIXE()
		{
			this._LOAIXE1 = default(EntityRef<LOAIXE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiXe", DbType="Int NOT NULL")]
		public int LoaiXe
		{
			get
			{
				return this._LoaiXe;
			}
			set
			{
				if ((this._LoaiXe != value))
				{
					if (this._LOAIXE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._LoaiXe = value;
					this.SendPropertyChanged("LoaiXe");
					this.OnLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChoTrong", DbType="Int NOT NULL")]
		public int ChoTrong
		{
			get
			{
				return this._ChoTrong;
			}
			set
			{
				if ((this._ChoTrong != value))
				{
					this.OnChoTrongChanging(value);
					this.SendPropertyChanging();
					this._ChoTrong = value;
					this.SendPropertyChanged("ChoTrong");
					this.OnChoTrongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_BAIXE", Storage="_LOAIXE1", ThisKey="LoaiXe", OtherKey="MaLoai", IsForeignKey=true)]
		public LOAIXE LOAIXE1
		{
			get
			{
				return this._LOAIXE1.Entity;
			}
			set
			{
				LOAIXE previousValue = this._LOAIXE1.Entity;
				if (((previousValue != value) 
							|| (this._LOAIXE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIXE1.Entity = null;
						previousValue.BAIXEs.Remove(this);
					}
					this._LOAIXE1.Entity = value;
					if ((value != null))
					{
						value.BAIXEs.Add(this);
						this._LoaiXe = value.MaLoai;
					}
					else
					{
						this._LoaiXe = default(int);
					}
					this.SendPropertyChanged("LOAIXE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.XE")]
	public partial class XE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MaKH;
		
		private int _LoaiXe;
		
		private string _HieuXe;
		
		private string _BangSo;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
		private EntityRef<LOAIXE> _LOAIXE1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnLoaiXeChanging(int value);
    partial void OnLoaiXeChanged();
    partial void OnHieuXeChanging(string value);
    partial void OnHieuXeChanged();
    partial void OnBangSoChanging(string value);
    partial void OnBangSoChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public XE()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			this._LOAIXE1 = default(EntityRef<LOAIXE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiXe", DbType="Int NOT NULL")]
		public int LoaiXe
		{
			get
			{
				return this._LoaiXe;
			}
			set
			{
				if ((this._LoaiXe != value))
				{
					if (this._LOAIXE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._LoaiXe = value;
					this.SendPropertyChanged("LoaiXe");
					this.OnLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HieuXe", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string HieuXe
		{
			get
			{
				return this._HieuXe;
			}
			set
			{
				if ((this._HieuXe != value))
				{
					this.OnHieuXeChanging(value);
					this.SendPropertyChanging();
					this._HieuXe = value;
					this.SendPropertyChanged("HieuXe");
					this.OnHieuXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BangSo", DbType="VarChar(30)")]
		public string BangSo
		{
			get
			{
				return this._BangSo;
			}
			set
			{
				if ((this._BangSo != value))
				{
					this.OnBangSoChanging(value);
					this.SendPropertyChanging();
					this._BangSo = value;
					this.SendPropertyChanged("BangSo");
					this.OnBangSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XE_CTHD", Storage="_CTHDs", ThisKey="ID", OtherKey="MaXe")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_XE", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_XE", Storage="_LOAIXE1", ThisKey="LoaiXe", OtherKey="MaLoai", IsForeignKey=true)]
		public LOAIXE LOAIXE1
		{
			get
			{
				return this._LOAIXE1.Entity;
			}
			set
			{
				LOAIXE previousValue = this._LOAIXE1.Entity;
				if (((previousValue != value) 
							|| (this._LOAIXE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIXE1.Entity = null;
						previousValue.XEs.Remove(this);
					}
					this._LOAIXE1.Entity = value;
					if ((value != null))
					{
						value.XEs.Add(this);
						this._LoaiXe = value.MaLoai;
					}
					else
					{
						this._LoaiXe = default(int);
					}
					this.SendPropertyChanged("LOAIXE1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.XE = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.XE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MaHD;
		
		private decimal _Gia;
		
		private int _MaXe;
		
		private int _Option;
		
		private System.Nullable<System.DateTime> _TimeStart;
		
		private System.DateTime _TimeEnd;
		
		private EntityRef<XE> _XE;
		
		private EntityRef<HOPDONG> _HOPDONG;
		
		private EntityRef<OPTION_DICHVU> _OPTION_DICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaHDChanging(int value);
    partial void OnMaHDChanged();
    partial void OnGiaChanging(decimal value);
    partial void OnGiaChanged();
    partial void OnMaXeChanging(int value);
    partial void OnMaXeChanged();
    partial void OnOptionChanging(int value);
    partial void OnOptionChanged();
    partial void OnTimeStartChanging(System.Nullable<System.DateTime> value);
    partial void OnTimeStartChanged();
    partial void OnTimeEndChanging(System.DateTime value);
    partial void OnTimeEndChanged();
    #endregion
		
		public CTHD()
		{
			this._XE = default(EntityRef<XE>);
			this._HOPDONG = default(EntityRef<HOPDONG>);
			this._OPTION_DICHVU = default(EntityRef<OPTION_DICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaHD", DbType="Int NOT NULL")]
		public int MaHD
		{
			get
			{
				return this._MaHD;
			}
			set
			{
				if ((this._MaHD != value))
				{
					if (this._HOPDONG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaHDChanging(value);
					this.SendPropertyChanging();
					this._MaHD = value;
					this.SendPropertyChanged("MaHD");
					this.OnMaHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Money NOT NULL")]
		public decimal Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaXe", DbType="Int NOT NULL")]
		public int MaXe
		{
			get
			{
				return this._MaXe;
			}
			set
			{
				if ((this._MaXe != value))
				{
					if (this._XE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaXeChanging(value);
					this.SendPropertyChanging();
					this._MaXe = value;
					this.SendPropertyChanged("MaXe");
					this.OnMaXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Option]", Storage="_Option", DbType="Int NOT NULL")]
		public int Option
		{
			get
			{
				return this._Option;
			}
			set
			{
				if ((this._Option != value))
				{
					this.OnOptionChanging(value);
					this.SendPropertyChanging();
					this._Option = value;
					this.SendPropertyChanged("Option");
					this.OnOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStart", DbType="DateTime")]
		public System.Nullable<System.DateTime> TimeStart
		{
			get
			{
				return this._TimeStart;
			}
			set
			{
				if ((this._TimeStart != value))
				{
					this.OnTimeStartChanging(value);
					this.SendPropertyChanging();
					this._TimeStart = value;
					this.SendPropertyChanged("TimeStart");
					this.OnTimeStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeEnd", DbType="DateTime NOT NULL")]
		public System.DateTime TimeEnd
		{
			get
			{
				return this._TimeEnd;
			}
			set
			{
				if ((this._TimeEnd != value))
				{
					this.OnTimeEndChanging(value);
					this.SendPropertyChanging();
					this._TimeEnd = value;
					this.SendPropertyChanged("TimeEnd");
					this.OnTimeEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="XE_CTHD", Storage="_XE", ThisKey="MaXe", OtherKey="ID", IsForeignKey=true)]
		public XE XE
		{
			get
			{
				return this._XE.Entity;
			}
			set
			{
				XE previousValue = this._XE.Entity;
				if (((previousValue != value) 
							|| (this._XE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._XE.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._XE.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MaXe = value.ID;
					}
					else
					{
						this._MaXe = default(int);
					}
					this.SendPropertyChanged("XE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CTHD", Storage="_HOPDONG", ThisKey="MaHD", OtherKey="ID", IsForeignKey=true)]
		public HOPDONG HOPDONG
		{
			get
			{
				return this._HOPDONG.Entity;
			}
			set
			{
				HOPDONG previousValue = this._HOPDONG.Entity;
				if (((previousValue != value) 
							|| (this._HOPDONG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOPDONG.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._HOPDONG.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MaHD = value.ID;
					}
					else
					{
						this._MaHD = default(int);
					}
					this.SendPropertyChanged("HOPDONG");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPTION_DICHVU_CTHD", Storage="_OPTION_DICHVU", ThisKey="Option", OtherKey="ID", IsForeignKey=true)]
		public OPTION_DICHVU OPTION_DICHVU
		{
			get
			{
				return this._OPTION_DICHVU.Entity;
			}
			set
			{
				OPTION_DICHVU previousValue = this._OPTION_DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._OPTION_DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._OPTION_DICHVU.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._OPTION_DICHVU.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._Option = value.ID;
					}
					else
					{
						this._Option = default(int);
					}
					this.SendPropertyChanged("OPTION_DICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DICHVU")]
	public partial class DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDV;
		
		private string _Ten;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
		private EntitySet<BANGGIADICHVU> _BANGGIADICHVUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(int value);
    partial void OnMaDVChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    #endregion
		
		public DICHVU()
		{
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			this._BANGGIADICHVUs = new EntitySet<BANGGIADICHVU>(new Action<BANGGIADICHVU>(this.attach_BANGGIADICHVUs), new Action<BANGGIADICHVU>(this.detach_BANGGIADICHVUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ten
		{
			get
			{
				return this._Ten;
			}
			set
			{
				if ((this._Ten != value))
				{
					this.OnTenChanging(value);
					this.SendPropertyChanging();
					this._Ten = value;
					this.SendPropertyChanged("Ten");
					this.OnTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_HOPDONG", Storage="_HOPDONGs", ThisKey="MaDV", OtherKey="MaDV")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_BANGGIADICHVU", Storage="_BANGGIADICHVUs", ThisKey="MaDV", OtherKey="MaDV")]
		public EntitySet<BANGGIADICHVU> BANGGIADICHVUs
		{
			get
			{
				return this._BANGGIADICHVUs;
			}
			set
			{
				this._BANGGIADICHVUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
		
		private void attach_BANGGIADICHVUs(BANGGIADICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = this;
		}
		
		private void detach_BANGGIADICHVUs(BANGGIADICHVU entity)
		{
			this.SendPropertyChanging();
			entity.DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOPDONG")]
	public partial class HOPDONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _MaKH;
		
		private int _MaDV;
		
		private System.Nullable<System.DateTime> _Created_At;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<DICHVU> _DICHVU;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnMaDVChanging(int value);
    partial void OnMaDVChanged();
    partial void OnCreated_AtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreated_AtChanged();
    #endregion
		
		public HOPDONG()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._DICHVU = default(EntityRef<DICHVU>);
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int NOT NULL")]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Int NOT NULL")]
		public int MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_At", DbType="DateTime")]
		public System.Nullable<System.DateTime> Created_At
		{
			get
			{
				return this._Created_At;
			}
			set
			{
				if ((this._Created_At != value))
				{
					this.OnCreated_AtChanging(value);
					this.SendPropertyChanging();
					this._Created_At = value;
					this.SendPropertyChanged("Created_At");
					this.OnCreated_AtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOPDONG_CTHD", Storage="_CTHDs", ThisKey="ID", OtherKey="MaHD")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_HOPDONG", Storage="_DICHVU", ThisKey="MaDV", OtherKey="MaDV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MaDV = value.MaDV;
					}
					else
					{
						this._MaDV = default(int);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOPDONG", Storage="_KHACHHANG", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOPDONGs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOPDONGs.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(int);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOPDONG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.DateTime _BirthDay;
		
		private string _SDT;
		
		private System.Data.Linq.Binary _HinhAnh;
		
		private EntitySet<XE> _XEs;
		
		private EntitySet<HOPDONG> _HOPDONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnBirthDayChanging(System.DateTime value);
    partial void OnBirthDayChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnHinhAnhChanging(System.Data.Linq.Binary value);
    partial void OnHinhAnhChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			this._HOPDONGs = new EntitySet<HOPDONG>(new Action<HOPDONG>(this.attach_HOPDONGs), new Action<HOPDONG>(this.detach_HOPDONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="Date NOT NULL")]
		public System.DateTime BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(15) NOT NULL", CanBeNull=false)]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnh", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary HinhAnh
		{
			get
			{
				return this._HinhAnh;
			}
			set
			{
				if ((this._HinhAnh != value))
				{
					this.OnHinhAnhChanging(value);
					this.SendPropertyChanging();
					this._HinhAnh = value;
					this.SendPropertyChanged("HinhAnh");
					this.OnHinhAnhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_XE", Storage="_XEs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOPDONG", Storage="_HOPDONGs", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<HOPDONG> HOPDONGs
		{
			get
			{
				return this._HOPDONGs;
			}
			set
			{
				this._HOPDONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOPDONGs(HOPDONG entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAIXE")]
	public partial class LOAIXE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaLoai;
		
		private string _TenLoai;
		
		private EntitySet<BAIXE> _BAIXEs;
		
		private EntitySet<XE> _XEs;
		
		private EntitySet<BANGGIADICHVU> _BANGGIADICHVUs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiChanging(int value);
    partial void OnMaLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LOAIXE()
		{
			this._BAIXEs = new EntitySet<BAIXE>(new Action<BAIXE>(this.attach_BAIXEs), new Action<BAIXE>(this.detach_BAIXEs));
			this._XEs = new EntitySet<XE>(new Action<XE>(this.attach_XEs), new Action<XE>(this.detach_XEs));
			this._BANGGIADICHVUs = new EntitySet<BANGGIADICHVU>(new Action<BANGGIADICHVU>(this.attach_BANGGIADICHVUs), new Action<BANGGIADICHVU>(this.detach_BANGGIADICHVUs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaLoai
		{
			get
			{
				return this._MaLoai;
			}
			set
			{
				if ((this._MaLoai != value))
				{
					this.OnMaLoaiChanging(value);
					this.SendPropertyChanging();
					this._MaLoai = value;
					this.SendPropertyChanged("MaLoai");
					this.OnMaLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_BAIXE", Storage="_BAIXEs", ThisKey="MaLoai", OtherKey="LoaiXe")]
		public EntitySet<BAIXE> BAIXEs
		{
			get
			{
				return this._BAIXEs;
			}
			set
			{
				this._BAIXEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_XE", Storage="_XEs", ThisKey="MaLoai", OtherKey="LoaiXe")]
		public EntitySet<XE> XEs
		{
			get
			{
				return this._XEs;
			}
			set
			{
				this._XEs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_BANGGIADICHVU", Storage="_BANGGIADICHVUs", ThisKey="MaLoai", OtherKey="LoaiXe")]
		public EntitySet<BANGGIADICHVU> BANGGIADICHVUs
		{
			get
			{
				return this._BANGGIADICHVUs;
			}
			set
			{
				this._BANGGIADICHVUs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BAIXEs(BAIXE entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE1 = this;
		}
		
		private void detach_BAIXEs(BAIXE entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE1 = null;
		}
		
		private void attach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE1 = this;
		}
		
		private void detach_XEs(XE entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE1 = null;
		}
		
		private void attach_BANGGIADICHVUs(BANGGIADICHVU entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE1 = this;
		}
		
		private void detach_BANGGIADICHVUs(BANGGIADICHVU entity)
		{
			this.SendPropertyChanging();
			entity.LOAIXE1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.OPTION_DICHVU")]
	public partial class OPTION_DICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Option;
		
		private EntitySet<CTHD> _CTHDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnOptionChanging(string value);
    partial void OnOptionChanged();
    #endregion
		
		public OPTION_DICHVU()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Option]", Storage="_Option", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Option
		{
			get
			{
				return this._Option;
			}
			set
			{
				if ((this._Option != value))
				{
					this.OnOptionChanging(value);
					this.SendPropertyChanging();
					this._Option = value;
					this.SendPropertyChanged("Option");
					this.OnOptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="OPTION_DICHVU_CTHD", Storage="_CTHDs", ThisKey="ID", OtherKey="Option")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.OPTION_DICHVU = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.OPTION_DICHVU = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BANGGIADICHVU")]
	public partial class BANGGIADICHVU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaDV;
		
		private int _LoaiXe;
		
		private decimal _TheoGio;
		
		private EntityRef<LOAIXE> _LOAIXE1;
		
		private EntityRef<DICHVU> _DICHVU;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaDVChanging(int value);
    partial void OnMaDVChanged();
    partial void OnLoaiXeChanging(int value);
    partial void OnLoaiXeChanged();
    partial void OnTheoGioChanging(decimal value);
    partial void OnTheoGioChanged();
    #endregion
		
		public BANGGIADICHVU()
		{
			this._LOAIXE1 = default(EntityRef<LOAIXE>);
			this._DICHVU = default(EntityRef<DICHVU>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDV", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaDV
		{
			get
			{
				return this._MaDV;
			}
			set
			{
				if ((this._MaDV != value))
				{
					if (this._DICHVU.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaDVChanging(value);
					this.SendPropertyChanging();
					this._MaDV = value;
					this.SendPropertyChanged("MaDV");
					this.OnMaDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiXe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LoaiXe
		{
			get
			{
				return this._LoaiXe;
			}
			set
			{
				if ((this._LoaiXe != value))
				{
					if (this._LOAIXE1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._LoaiXe = value;
					this.SendPropertyChanged("LoaiXe");
					this.OnLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TheoGio", DbType="Money NOT NULL", IsPrimaryKey=true)]
		public decimal TheoGio
		{
			get
			{
				return this._TheoGio;
			}
			set
			{
				if ((this._TheoGio != value))
				{
					this.OnTheoGioChanging(value);
					this.SendPropertyChanging();
					this._TheoGio = value;
					this.SendPropertyChanged("TheoGio");
					this.OnTheoGioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAIXE_BANGGIADICHVU", Storage="_LOAIXE1", ThisKey="LoaiXe", OtherKey="MaLoai", IsForeignKey=true)]
		public LOAIXE LOAIXE1
		{
			get
			{
				return this._LOAIXE1.Entity;
			}
			set
			{
				LOAIXE previousValue = this._LOAIXE1.Entity;
				if (((previousValue != value) 
							|| (this._LOAIXE1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAIXE1.Entity = null;
						previousValue.BANGGIADICHVUs.Remove(this);
					}
					this._LOAIXE1.Entity = value;
					if ((value != null))
					{
						value.BANGGIADICHVUs.Add(this);
						this._LoaiXe = value.MaLoai;
					}
					else
					{
						this._LoaiXe = default(int);
					}
					this.SendPropertyChanged("LOAIXE1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DICHVU_BANGGIADICHVU", Storage="_DICHVU", ThisKey="MaDV", OtherKey="MaDV", IsForeignKey=true)]
		public DICHVU DICHVU
		{
			get
			{
				return this._DICHVU.Entity;
			}
			set
			{
				DICHVU previousValue = this._DICHVU.Entity;
				if (((previousValue != value) 
							|| (this._DICHVU.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DICHVU.Entity = null;
						previousValue.BANGGIADICHVUs.Remove(this);
					}
					this._DICHVU.Entity = value;
					if ((value != null))
					{
						value.BANGGIADICHVUs.Add(this);
						this._MaDV = value.MaDV;
					}
					else
					{
						this._MaDV = default(int);
					}
					this.SendPropertyChanged("DICHVU");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
